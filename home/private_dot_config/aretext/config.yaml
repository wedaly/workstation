# aretext configuration

# Each rule below defines a pattern to match the file path.
# All matching rules are merged in-order, with configuration from
# later rules replacing or extending configurations from prior rules.
#
# Customization guide: https://aretext.org/docs/customization.html
# Configuration reference: https://aretext.org/docs/config-reference.html

- name: default
  pattern: "**"
  config:
    autoIndent: false
    hidePatterns:
      - "**/.git"
      - "**/.jj"
      - "**/.cache"
      - "**/.local"
      - "**/.rustup"
      - "**/go/pkg/mod"
      - "**/venv"
      - "**/.kube/cache"
      - "**/_output"
      - "**/__pycache__"
      - "**/node_modules"
      - "**/*.o"
      - "**/*.out"
      - "**/*.a"
      - "**/*.so"
      - "**/*.png"
      - "**/*.bmp"
      - "**/*.jpg"
      - "**/*.jpeg"
      - "**/*.avif"
      - "**/*.ico"
      - "**/*.mpeg"
      - "**/*.mp4"
      - "**/*.pdf"
    syntaxLanguage: plaintext
    tabExpand: false
    tabSize: 4
    showTabs: false
    showSpaces: false
    showLineNumbers: false
    lineWrap: "character"
    styles:
      lineNum: {color: "olive"}
      tokenOperator: {color: "purple"}
      tokenKeyword: {color: "olive"}
      tokenNumber: {color: "green"}
      tokenString: {color: "maroon"}
      tokenComment: {color: "navy"}
      tokenCustom1: {color: "teal"}
      tokenCustom2: {color: "fuchsia"}
      tokenCustom3: {color: "red"}
      tokenCustom4: {color: "lime"}
      tokenCustom5: {color: "aqua"}
      tokenCustom6: {color: "darkgreen"}
      tokenCustom7: {color: "darkcyan"}
      tokenCustom8: {color: "darkblue"}
    menuCommands:
      - name: strip trailing whitespace
        shellCmd: sed -i 's/[ \t]*$//' "$FILEPATH"
        mode: silent
      - name: git blame
        shellCmd: git blame --color-lines "$FILEPATH" | less -R +$LINE
      - name: git commit wip
        shellCmd: git add -u && git commit -m wip
        save: true
      - name: exec in shell
        shellCmd: printenv SELECTION | tmux load-buffer - && tmux new-window -S -n aretext-shell && tmux paste-buffer
      - name: copy to clipboard
        shellCmd: printenv SELECTION | tmux load-buffer -
        mode: silent
      - name: paste from clipboard
        shellCmd: tmux show-buffer
        mode: insert
      - name: filepath copy
        shellCmd: echo -n "$FILEPATH" | tmux load-buffer -
        mode: silent
      - name: split window horizontal
        shellCmd: tmux split-window -h "aretext -line $LINE '$FILEPATH'"
        mode: silent
      - name: split window vertical
        shellCmd: tmux split-window -v "aretext -line $LINE '$FILEPATH'"
        mode: silent
      - name: grep selection or word
        shellCmd: rg "${SELECTION:-$WORD}" --vimgrep
        mode: fileLocations
      - name: insert word from dictionary
        shellCmd: cat /usr/share/dict/words
        mode: insertChoice
      - name: working directory to current file
        shellCmd: dirname "$FILEPATH"
        mode: workingDir
      - name: working directory to go module
        shellCmd: find $(go env GOPATH)/src -type f -name "go.mod" | xargs -I{} dirname {}
        mode: workingDir
      - name: git url
        shellCmd: giturl.py "$FILEPATH" "$LINE" | less

- name: git commit
  pattern: "**/.git/*_EDITMSG"
  config:
    syntaxLanguage: gitcommit
    tabExpand: true
    tabSize: 4

- name: git rebase
  pattern: "**/.git/**/git-rebase-todo"
  config:
    syntaxLanguage: gitrebase

- name: json
  pattern: "**/*.json"
  config: &jsonConfig
    autoIndent: true
    syntaxLanguage: json
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: yaml
  pattern: "**/*.yaml"
  config: &yamlConfig
    autoIndent: true
    syntaxLanguage: yaml
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: yml
  pattern: "**/*.yml"
  config: *yamlConfig

- name: butane
  pattern: "**/*.bu"
  config: *yamlConfig

- name: ignition
  pattern: "**/*.ign"
  config: *jsonConfig

- name: shell
  pattern: "**/*.sh"
  config: &shellConfig
    autoIndent: true
    syntaxLanguage: bash
    tabExpand: true
    tabSize: 4
    showLineNumbers: true

- name: bashrc
  pattern: "**/.bashrc"
  config: *shellConfig

- name: bash_profile
  pattern: "**/.bash_profile"
  config: *shellConfig

- name: bash_private
  pattern: "**/.bash_private"
  config: *shellConfig

- name: powershell
  pattern: "**/*.ps1"
  config:
    autoIndent: true
    tabExpand: true
    tabSize: 4
    showLineNumbers: true

- name: xml
  pattern: "**/*.xml"
  config: &xmlconfig
    autoIndent: true
    syntaxLanguage: xml
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: html
  pattern: "**/*.html"
  config: *xmlconfig

- name: css
  pattern: "**/*.css"
  config:
    autoIndent: true
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: Makefile
  pattern: "**/*Makefile*"
  config: &makefile
    syntaxLanguage: makefile
    showTabs: true
    tabExpand: false
    autoIndent: true
    tabSize: 4
    showLineNumbers: true

- name: mk
  pattern: "**/*.mk"
  config: *makefile

- name: go
  pattern: "**/*.go"
  config:
    autoIndent: true
    syntaxLanguage: go
    tabExpand: false
    tabSize: 4
    showLineNumbers: true
    menuCommands:
    - name: fmt file
      shellCmd: goimports -w $FILEPATH | less
      save: true
    - name: comment or uncomment selection
      shellCmd: printenv SELECTION | ~/.config/aretext/scripts/comment-go.py
      mode: insert
    - name: insert test snippet
      shellCmd: cat ~/.config/aretext/snippets/go-test.go
      mode: insert
    - name: gospelunk def
      shellCmd: gospelunk inspect -r definition -f "$FILEPATH" -l "$LINE" -c "$COLUMN" -t $'{{range .Relations}}{{.Path|RelPath}}:{{.Line}}:{{.Column}}:{{.Pkg}}.{{.Name}}\n{{end}}'
      mode: fileLocations
      save: true
    - name: gospelunk ref
      shellCmd: gospelunk inspect -r reference -f "$FILEPATH" -l "$LINE" -c "$COLUMN" -t $'{{range .Relations}}{{.Path|RelPath}}:{{.Line}}:{{.Column}}:{{.Name}}\n{{end}}' | tee /tmp/gospelunk-recall.txt
      mode: fileLocations
      save: true
    - name: gospelunk impl
      shellCmd: gospelunk inspect -r implementation -f "$FILEPATH" -l "$LINE" -c "$COLUMN" -t $'{{range .Relations}}{{.Path|RelPath}}:{{.Line}}:{{.Column}}:{{.Name}}\n{{end}}' | tee /tmp/gospelunk-recall.txt
      mode: fileLocations
      save: true
    - name: gospelunk interface
      shellCmd: gospelunk inspect -r interface -f "$FILEPATH" -l "$LINE" -c "$COLUMN" -t $'{{range .Relations}}{{.Path|RelPath}}:{{.Line}}:{{.Column}}:{{.Name}}\n{{end}}' | tee /tmp/gospelunk-recall.txt
      mode: fileLocations
      save: true
    - name: gospelunk type
      shellCmd: gospelunk inspect -f "$FILEPATH" -l "$LINE" -c "$COLUMN" -t "{{.Name}} {{.Type}}" | less
      mode: terminal
      save: true
    - name: gospelunk list
      shellCmd: gospelunk list "file=$FILEPATH" -t $'{{range .Defs}}{{.Path|RelPath}}:{{.Line}}:{{.Column}}:{{.Name}}\n{{end}}' --include-private $(if [[ $FILEPATH == *_test.go ]]; then echo "--include-tests"; fi)
      mode: fileLocations
      save: true
    - name: gospelunk recall
      shellCmd: cat /tmp/gospelunk-recall.txt
      mode: fileLocations
      save: true
    - name: insert Go def from pkg
      mode: insertChoice
      shellCmd: gospelunk list "file=$FILEPATH" -t $'{{range .Defs}}{{.Name}}\n{{end}}' --include-private $(if [[ $FILEPATH == *_test.go ]]; then echo "--include-tests"; fi)
    - name: insert Go def from imports
      mode: insertChoice
      shellCmd: gospelunk list "file=$FILEPATH" -t $'{{range .Defs}}{{.Pkg.Name}}.{{.Name}}\n{{end}}' --only-imports $(if [[ $FILEPATH == *_test.go ]]; then echo "--include-tests"; fi)

- name: python
  pattern: "**/*.py"
  config:
    autoIndent: true
    syntaxLanguage: python
    tabExpand: true
    tabSize: 4
    showLineNumbers: true
    menuCommands:
      - name: insert python script snippet
        shellCmd: cat ~/.config/aretext/snippets/python-script.py
        mode: insert

- name: rust
  pattern: "**/*.rs"
  config:
    autoIndent: true
    syntaxLanguage: rust
    tabExpand: true
    tabSize: 4
    showLineNumbers: true

- name: c
  pattern: "**/*.c"
  config: &cconfig
    autoIndent: true
    syntaxLanguage: c
    tabExpand: false
    tabSize: 8
    showLineNumbers: true
    menuCommands:
    - name: c def
      shellCmd: cdef.py "$WORD"
      mode: fileLocations
      save: true

- name: c-header
  pattern: "**/*.h"
  config: *cconfig

- name: cpp
  pattern: "**/*.cpp"
  config: *cconfig

- name: protobuf
  pattern: "**/*.proto"
  config:
    autoIndent: true
    syntaxLanguage: protobuf
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: markdown
  pattern: "**/*.md"
  config:
    autoIndent: true
    syntaxLanguage: markdown
    tabExpand: true
    tabSize: 4
    showLineNumbers: true
    lineWrap: "word"
    styles:
      tokenCustom1: {color: "teal", bold: true}        # Heading
      tokenCustom2: {color: "default", italic: true}   # Emphasis
      tokenCustom3: {color: "default", bold: true}     # Strong emphasis
      tokenCustom4: {color: "purple", underline: true} # Link
    menuCommands:
    - name: fmt file
      shellCmd: markdownfmt -w $FILEPATH
      save: true

- name: bazel
  pattern: "**/*.bazel"
  config: &bazel
    autoIndent: true
    syntaxLanguage: python
    tabExpand: true
    tabSize: 4
    showLineNumbers: true

- name: bzl
  pattern: "**/*.bzl"
  config: *bazel

- name: bazel-workspace
  pattern: "**/WORKSPACE"
  config: *bazel

- name: todo
  pattern: "**/*.todo"
  config: &todotxt
    autoIndent: true
    syntaxLanguage: todotxt
    tabExpand: true
    tabSize: 4
    showLineNumbers: true

- name: devlog-todo
  pattern: "**/devlogs/todo.txt"
  config:
    <<: *todotxt
    menuCommands:
      - name: devlog tidy
        shellCmd: devlog tidy
        save: true
        mode: silent

- name: devlog-done
  pattern: "**/devlogs/done.txt"
  config: *todotxt

- name: nftables
  pattern: "**/*.nft"
  config:
    autoIndent: true
    tabExpand: true
    tabSize: 2
    showLineNumbers: true

- name: aretext
  pattern: "**/aretext/**"
  config:
    menuCommands:
    - name: build
      shellCmd: make build | less
      save: true
    - name: test
      shellCmd: make test | less
      save: true
    - name: fmt all
      shellCmd: make fmt
      save: true

- name: aretext-go
  pattern: "**/aretext/**/*.go"
  config:
    menuCommands:
    - name: fmt file
      shellCmd: goimports -w -local "github.com/aretext" $FILEPATH | less
      save: true

- name: gotemplate
  pattern: "**/*.tpl"
  config:
    syntaxLanguage: gotemplate
    tabExpand: true
    showLineNumbers: true

- name: chezmoi-template
  pattern: "**/chezmoi/**/*.tmpl"
  config:
    syntaxLanguage: gotemplate
    tabExpand: true
    showLineNumbers: true

- name: helm-chart
  pattern: "**/*chart*/**/templates/**/*.yaml"
  config:
    syntaxLanguage: gotemplate
    showLineNumbers: true

- name: helm-chart-snapshot
  pattern: "**/snapshots/**/*.yaml"
  config:
    syntaxLanguage: yaml

- name: dev-nonsense-template
  pattern: "**/dev-nonsense-blog/**/layouts/**/*.html"
  config:
    syntaxLanguage: gotemplate

- name: glfighters-sdl-cpp
  pattern: "**/GLFighters-SDL/**/*.cpp"
  config:
    tabExpand: false
    tabSize: 2

- name: glfighters-sdl-h
  pattern: "**/GLFighters-SDL/**/*.h"
  config:
    tabExpand: false
    tabSize: 2

- name: p4
  pattern: "**/*.p4"
  config:
    syntaxLanguage: p4
    showLineNumbers: true

- name: conf
  pattern: "**/*.conf"
  config:
    autoIndent: true
    tabExpand: true
    tabSize: 2
    showLineNumbers: true
