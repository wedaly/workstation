# If not running interactively, don't do anything
[[ $- != *i* ]] && return

# history
export HISTFILESIZE=100000
export HISTSIZE=100000
shopt -s histappend

# terminal
export TERMINAL=xterm
export KEYTIMEOUT=1

# prompt
PS1='\[\033[0;34m\][\w]\[\033[00m\] '

{{- if eq .chezmoi.os "linux" }}
# ls colors
alias ls='ls --color=auto'
{{- end }}

# aretext and vim key bindings everywhere
set -o vi
export EDITOR=aretext
export GIT_EDITOR=aretext
export SUDO_EDITOR=$HOME/go/bin/aretext

# git aliases
alias gb='git branch'
alias gco='git checkout'

# git completions
source $HOME/.git-completion.bash
__git_complete gb _git_branch
__git_complete gco _git_checkout

# scripts
export PATH="$HOME/bin:$PATH"

{{- if eq .chezmoi.os "darwin" }}
export BASH_SILENCE_DEPRECATION_WARNING=1

# homebrew
eval "$(/opt/homebrew/bin/brew shellenv)"
export PATH="/opt/homebrew/bin:/opt/homebrew/opt/gnu-sed/libexec/gnubin:$PATH"

# xdg config
export XDG_CONFIG_HOME=$HOME/.config
{{- end }}

# python interpreter enable readline and vi-mode
export PYTHONSTARTUP=~/.pythonrc

# rust
if [ -e $HOME/.cargo/env ]; then
    source $HOME/.cargo/env # rustup
else
    export PATH=$PATH:$HOME/.cargo/bin
fi

# go
export PATH=$PATH:/usr/local/go/bin:$HOME/go/bin

# fuzzy find
export FZF_DEFAULT_COMMAND='rg --files'

dir () {
    cd $(find . -type d ! -path "*/.git/*" 2> /dev/null | fzf --reverse || pwd)
}

# gospelunk
gofind () {
    gospelunk list -t {{"$'{{ range .Defs }}-line={{.Line}} {{.Path|RelPath}} {{.Name}}\\n{{ end }}'"}} $@ \
    | fzf --reverse \
    | cut -d " " -f 1-2 \
    | xargs -r aretext
}

gomod () {
    cd $(find $(go env GOPATH)/src -type f -name "go.mod" | grep -v testdata | xargs -I{} dirname {} | fzf --reverse || pwd)
}

# devlog
alias dle="devlog edit"
alias dlt="devlog tail | less"
alias todo="devlog todo"

# aretext
alias at="aretext"

# kubectl
if command -v kubectl >/dev/null 2>&1; then
    source <(kubectl completion bash)
    alias k=kubectl
    complete -F __start_kubectl k
fi

{{- if eq .chezmoi.os "linux" }}
# firefox / wayland
export MOZ_ENABLE_WAYLAND=1
{{- end }}

{{ if .gpg.key }}
# gpg-agent
export GPG_TTY=$(tty)
gpg-connect-agent updatestartuptty /bye >/dev/null
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)
gpgconf --launch gpg-agent
{{- else }}
# ssh keychain
if [ -f "$HOME/.ssh/id_ed25519" ]; then
    eval $(keychain --eval --timeout 2880 --quiet id_ed25519)
fi
if [ -f "$HOME/.ssh/id_rsa" ]; then
    eval $(keychain --eval --timeout 2880 --quiet id_rsa)
fi
{{- end }}

# start tmux or attach to existing session
if [ -z "$TMUX" ]; then
    tmux attach -t default || tmux new -s default
fi

# bash private
if [ -e $HOME/.bash_private ]; then
    source $HOME/.bash_private
fi
